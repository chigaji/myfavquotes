// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package doc

import "github.com/swaggo/swag"

const docTemplate_swagger = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Ronald",
            "url": "brothermen.com",
            "email": "chigaji@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "tags": [
    {
      "name": "Home",
      "description": "Home page"
    },
    {
      "name": "All Quotes",
      "description": "All the quotes"
    },
    {
      "name": "Financial Quotes",
      "description": "All About Financial Quotes"
    },
    {
      "name": "Life Quotes",
      "description": "All About Love Quotes"
    },
    {
      "name": "Love Quotes",
      "description": "All About Love Quotes"
    }
  ],
    "paths": {
        "/home": {
            "get": {
              "tags": [
                "Home"
              ],
              "summary": "Home page",
              "operationId": "homePage",
              "responses": {
                "200": {
                  "description": "success",
                  "content": {}
                }
              }
            }
          },
          "/quotes/{type}": {
            "get": {
              "tags": [
                "All Quotes"
              ],
              "summary": "Get all quotes of a given type",
              "operationId": "getQuotes",
              "parameters": [
                {
                  "name": "type",
                  "in": "path",
                  "description": "quote type",
                  "required": true,
                  "schema": {
                    "type": "string"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Success",
                  "content": {}
                },
                "400": {
                  "description": "Bad Request",
                  "content": {}
                },
                "404": {
                  "description": "Not found",
                  "content": {}
                }
              }
            }
          },
          "/quote/{type}": {
            "get": {
              "tags": [
                "All Quotes"
              ],
              "summary": "get a random quote of a given type",
              "operationId": "getQuote",
              "parameters": [
                {
                  "name": "type",
                  "in": "path",
                  "description": "quote type",
                  "required": true,
                  "schema": {
                    "type": "string"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Success",
                  "content": {}
                },
                "400": {
                  "description": "Bad Request",
                  "content": {}
                },
                "404": {
                  "description": "Not found",
                  "content": {}
                }
              }
            }
          },
          "/quote/{type}/{id}": {
            "get": {
              "tags": [
                "All Quotes"
              ],
              "summary": "get a quote of a given type by id",
              "operationId": "getQuoteById",
              "parameters": [
                {
                  "name": "type",
                  "in": "path",
                  "description": "quote type",
                  "required": true,
                  "schema": {
                    "type": "string"
                  }
                },
                {
                  "name": "id",
                  "in": "path",
                  "description": "quote id",
                  "required": true,
                  "schema": {
                    "type": "string"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Success",
                  "content": {}
                },
                "400": {
                  "description": "Bad Request",
                  "content": {}
                },
                "404": {
                  "description": "Not found",
                  "content": {}
                }
              }
            }
          },
    }
}`

// SwaggerInfo_swagger holds exported Swagger Info so clients can modify it
var SwaggerInfo_swagger = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:4000",
	BasePath:         "/api/v1",
	Schemes:          []string{"http"},
	Title:            "My Favorite Quotes",
	Description:      "This is an API for My favorite quotes",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate_swagger,
}

func init() {
	swag.Register(SwaggerInfo_swagger.InstanceName(), SwaggerInfo_swagger)
}
